services:
  mongodb:
    image: ${MONGO_IMAGE:-mongo:7.0}
    container_name: ${MONGO_CONTAINER_NAME:-mongodb}
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - MONGO_INITDB_DATABASE=${MONGO_INITDB_DATABASE:-mydatabase}
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./init:/docker-entrypoint-initdb.d:ro
      - ./logs:/var/log/mongodb
    ports:
      - "${MONGO_PORT:-27017}:27017"
    networks:
      - mongodb_network
    command: >
      mongod
      --auth
      --bind_ip_all
      --logpath /var/log/mongodb/mongod.log
      --logappend
      --journal
      --storageEngine wiredTiger
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"

  mongo-express:
    image: ${MONGO_EXPRESS_IMAGE:-mongo-express:latest}
    container_name: ${MONGO_EXPRESS_CONTAINER_NAME:-mongo-express}
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ROOT_USERNAME:-admin}
      - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - ME_CONFIG_MONGODB_URL=mongodb://${MONGO_ROOT_USERNAME:-admin}:${MONGO_ROOT_PASSWORD:-password}@mongodb:27017/
      - ME_CONFIG_BASICAUTH_USERNAME=${MONGO_EXPRESS_USERNAME:-admin}
      - ME_CONFIG_BASICAUTH_PASSWORD=${MONGO_EXPRESS_PASSWORD:-pass}
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=${MONGO_EXPRESS_ENABLE_ADMIN:-true}
    ports:
      - "${MONGO_EXPRESS_PORT:-8081}:8081"
    networks:
      - mongodb_network
      - public_network
    depends_on:
      mongodb:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8081"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"

  mongo-backup:
    image: ${MONGO_IMAGE:-mongo:7.0}
    container_name: ${MONGO_BACKUP_CONTAINER_NAME:-mongo-backup}
    environment:
      - MONGO_ROOT_USERNAME=${MONGO_ROOT_USERNAME:-admin}
      - MONGO_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD:-password}
      - MONGO_HOST=mongodb
      - MONGO_PORT=27017
      - BACKUP_SCHEDULE=${BACKUP_SCHEDULE:-0 2 * * *}
    volumes:
      - ./backups:/backups
      - ./scripts:/scripts:ro
    networks:
      - mongodb_network
    depends_on:
      mongodb:
        condition: service_healthy
    command: >
      sh -c "
      echo '${BACKUP_SCHEDULE:-0 2 * * *} /scripts/backup.sh' > /etc/crontabs/root &&
      crond -f -d 8"
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
        compress: "true"

networks:
  mongodb_network:
    driver: bridge
    internal: true
  public_network:
    driver: bridge

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local
  backup:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /tmp/backup
