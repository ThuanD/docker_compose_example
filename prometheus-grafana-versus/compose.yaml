services:
  prometheus:
    image: ${PROMETHEUS_IMAGE:-prom/prometheus:latest}
    container_name: ${PROMETHEUS_CONTAINER_NAME:-prometheus}
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
    ports:
      - ${PROMETHEUS_PORT:-9090}:9090
    networks:
      - monitoring-network
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    read_only: true
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:9090/-/healthy"]
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 60s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"

  grafana:
    image: ${GRAFANA_IMAGE:-grafana/grafana:latest}
    container_name: ${GRAFANA_CONTAINER_NAME:-grafana}
    environment:
      - GF_SECURITY_ADMIN_USER=${GRAFANA_ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-grafana}
      - GF_INSTALL_PLUGINS=${GRAFANA_PLUGINS:-}
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
      - grafana_data:/var/lib/grafana
    ports:
      - ${GRAFANA_PORT:-3000}:3000
    networks:
      - monitoring-network
      - public-network
    security_opt:
      - no-new-privileges:true
    read_only: true
    depends_on:
      prometheus:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"

  versus:
    image: ${GRAFANA_IMAGE:-ghcr.io/versuscontrol/versus-incident:latest}
    container_name: ${GRAFANA_CONTAINER_NAME:-versus}
    environment:
      - SLACK_TOKEN=${SLACK_TOKEN}
      - SLACK_CHANNEL_ID=${SLACK_CHANNEL_ID}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - TELEGRAM_CHAT_ID=${TELEGRAM_CHAT_ID}
    volumes:
      - ./versus/config/:/app/config/config.yaml
    networks:
      - monitoring-network
      - public-network
    ports:
      - ${VERSUS_PORT:-8080}:8080
    depends_on:
      - prometheus
      - grafana
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    healthcheck:
      test: ["CMD", "wget", "--spider", "-q", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"

networks:
  monitoring-network:
    driver: bridge
    internal: true
  public-network:
    driver: bridge

volumes:
  prom_data:
    driver: local
  grafana_data:
    driver: local
  backup:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /tmp/backup
