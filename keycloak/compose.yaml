services:
  postgres:
    image: ${POSTGRES_IMAGE:-postgres:15}
    container_name: ${POSTGRES_CONTAINER_NAME:-keycloak-postgres}
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-keycloak}
      - POSTGRES_USER=${POSTGRES_USER:-keycloak}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - keycloak_network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-keycloak}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"

  keycloak:
    image: ${KEYCLOAK_IMAGE:-quay.io/keycloak/keycloak:latest}
    container_name: ${KEYCLOAK_CONTAINER_NAME:-keycloak}
    environment:
      - KC_DB=postgres
      - KC_DB_URL=jdbc:postgresql://postgres:5432/${POSTGRES_DB:-keycloak}
      - KC_DB_USERNAME=${POSTGRES_USER:-keycloak}
      - KC_DB_PASSWORD=${POSTGRES_PASSWORD:-password}
      - KC_HOSTNAME=${KEYCLOAK_HOSTNAME:-localhost}
      - KC_HOSTNAME_PORT=${KEYCLOAK_PORT:-8080}
      - KC_HOSTNAME_STRICT=false
      - KC_HOSTNAME_STRICT_HTTPS=false
      - KC_LOG_LEVEL=${KEYCLOAK_LOG_LEVEL:-INFO}
      - KC_METRICS_ENABLED=${KEYCLOAK_METRICS:-true}
      - KC_HEALTH_ENABLED=${KEYCLOAK_HEALTH:-true}
      - KEYCLOAK_ADMIN=${KEYCLOAK_ADMIN_USER:-admin}
      - KEYCLOAK_ADMIN_PASSWORD=${KEYCLOAK_ADMIN_PASSWORD:-admin}
    volumes:
      - keycloak_data:/opt/keycloak/data
      - ./themes:/opt/keycloak/themes/custom:ro
      - ./providers:/opt/keycloak/providers:ro
    ports:
      - "${KEYCLOAK_PORT:-8080}:8080"
      - "${KEYCLOAK_HTTPS_PORT:-8443}:8443"
    networks:
      - keycloak_network
      - public_network
    depends_on:
      postgres:
        condition: service_healthy
    command: start-dev
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"

networks:
  keycloak_network:
    driver: bridge
    internal: true
  public_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  keycloak_data:
    driver: local
