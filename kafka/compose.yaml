services:

  zookeeper:
    image: ${ZOOKEEPER_IMAGE:-wurstmeister/zookeeper:latest}
    container_name: ${ZOOKEEPER_CONTAINER_NAME:-zookeeper}
    ports:
      - "${ZOOKEEPER_PORT:-2181}:2181"
    networks:
      - kafka_network
    environment:
      ZOO_MY_ID: 1
      ZOO_LOG4J_PROP: "INFO,CONSOLE"
    volumes:
      - zookeeper_data:/data
      - zookeeper_logs:/logs
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    restart: unless-stopped
    healthcheck:
      test: echo stat | nc localhost 2181 || exit 1
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"

  kafka:
    image: ${KAFKA_IMAGE:-wurstmeister/kafka:latest}
    container_name: ${KAFKA_CONTAINER_NAME:-kafka}
    ports:
      - "${KAFKA_PORT:-9092}:9092"
      - "${KAFKA_EXTERNAL_PORT:-9093}:9093"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ADVERTISED_LISTENERS: ${KAFKA_ADVERTISED_LISTENERS:-INSIDE://kafka:9092,OUTSIDE://localhost:9093}
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: ${KAFKA_LISTENER_SECURITY_PROTOCOL_MAP:-INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT}
      KAFKA_LISTENERS: ${KAFKA_LISTENERS:-INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093}
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: ${KAFKA_ZOOKEEPER_CONNECT:-zookeeper:2181}
      KAFKA_CREATE_TOPICS: ${KAFKA_CREATE_TOPICS:-"topic1:1:1,topic2:1:1"}
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: ${KAFKA_AUTO_CREATE_TOPICS_ENABLE:-true}
      KAFKA_LOG_RETENTION_HOURS: ${KAFKA_LOG_RETENTION_HOURS:-168}
      KAFKA_LOG_RETENTION_BYTES: ${KAFKA_LOG_RETENTION_BYTES:-1073741824}
      KAFKA_NUM_PARTITIONS: ${KAFKA_NUM_PARTITIONS:-1}
      JMX_PORT: 9999
    volumes:
      - kafka_data:/kafka
    networks:
      - kafka_network
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    depends_on:
      - zookeeper
#      zookeeper:
#        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: kafka-topics.sh --bootstrap-server localhost:9092 --list || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"

  kafka-ui:
    image: ${KAFKA_UI_IMAGE:-provectuslabs/kafka-ui:latest}
    container_name: ${KAFKA_UI_CONTAINER_NAME:-kafka-ui}
    ports:
      - "${KAFKA_UI_PORT:-8080}:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: ${KAFKA_UI_CLUSTER_NAME:-local}
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ${KAFKA_UI_BOOTSTRAP_SERVERS:-kafka:9092}
      KAFKA_CLUSTERS_0_ZOOKEEPER: ${KAFKA_UI_ZOOKEEPER:-zookeeper:2181}
    networks:
      - kafka_network
    depends_on:
      - kafka
#      kafka:
#        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    restart: unless-stopped
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/api/clusters || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    security_opt:
      - no-new-privileges:true
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
        compress: "true"

networks:
  kafka_network:
    driver: bridge

volumes:
  zookeeper_data:
  zookeeper_logs:
  kafka_data:
